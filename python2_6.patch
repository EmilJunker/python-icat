Index: icat/icatcheck.py
===================================================================
--- icat/icatcheck.py	(revision 272)
+++ icat/icatcheck.py	(working copy)
@@ -258,7 +258,7 @@
     def _genealogy(self, rules):
         """Set up the genealogy of entity types."""
 
-        tree = { t:{'level':0, 'base':None} for t in self.schema.keys() }
+        tree = dict([ (t,{'level':0, 'base':None}) for t in self.schema.keys() ])
         for t in tree:
             log.debug("checking ancestors of %s ...", t)
             for r in rules:
@@ -325,7 +325,7 @@
         except GenealogyError as e:
             log.error("%s Dropping class genealogy in Python output.", 
                       e.args[0])
-            tree = { t:{'level':0, 'base':None} for t in self.schema.keys() }
+            tree = dict([ (t,{'level':0, 'base':None}) for t in self.schema.keys() ])
         else:
             base = [t for t in tree if tree[t]['base'] is None][0]
             self.schema[base].classname = baseclassname
Index: icat/chunkedhttp.py
===================================================================
--- icat/chunkedhttp.py	(revision 315)
+++ icat/chunkedhttp.py	(working copy)
@@ -58,7 +58,7 @@
 
         if message_body is not None:
             chunksize = getattr(self, 'chunksize', self.default_chunk_size)
-            if isinstance(message_body, type(b'')):
+            if isinstance(message_body, type('')):
                 bodyiter = stringiterator(message_body, chunksize)
             elif isinstance(message_body, type(u'')):
                 bodyiter = stringiterator(message_body.encode('ascii'), 
Index: icat/dumpfile_xml.py
===================================================================
--- icat/dumpfile_xml.py	(revision 350)
+++ icat/dumpfile_xml.py	(working copy)
@@ -73,8 +73,8 @@
         elif subelem.tag in obj.InstMRel:
             if mreltypes is None:
                 info = client.getEntityInfo(obj.BeanName)
-                mreltypes = { f.name:insttypemap[f.type] 
-                              for f in info.fields if f.relType == "MANY" }
+                mreltypes = dict([ (f.name,insttypemap[f.type]) 
+                                   for f in info.fields if f.relType == "MANY" ])
             robj = elem2entity(client, insttypemap, 
                                subelem, mreltypes[subelem.tag], objindex)
             getattr(obj, subelem.tag).append(robj)
@@ -94,8 +94,8 @@
     def __init__(self, client, infile):
         self.client = client
         self.infile = infile
-        self.insttypemap = { c.BeanName:t 
-                             for t,c in self.client.typemap.iteritems() }
+        self.insttypemap = dict([ (c.BeanName,t) 
+                                  for t,c in self.client.typemap.iteritems() ])
 
     def getdata(self):
         """Iterate over the data chunks in the dump file.
Index: icat/dumpfile_yaml.py
===================================================================
--- icat/dumpfile_yaml.py	(revision 349)
+++ icat/dumpfile_yaml.py	(working copy)
@@ -96,8 +96,8 @@
         elif attr in obj.InstMRel:
             if mreltypes is None:
                 info = client.getEntityInfo(obj.BeanName)
-                mreltypes = { f.name:insttypemap[f.type] 
-                              for f in info.fields if f.relType == "MANY" }
+                mreltypes = dict([ (f.name,insttypemap[f.type]) 
+                                   for f in info.fields if f.relType == "MANY" ])
             for rd in d[attr]:
                 robj = dict2entity(client, insttypemap, 
                                    rd, mreltypes[attr], objindex)
@@ -118,8 +118,8 @@
     def __init__(self, client, infile):
         self.client = client
         self.infile = infile
-        self.insttypemap = { c.BeanName:t 
-                             for t,c in self.client.typemap.iteritems() }
+        self.insttypemap = dict([ (c.BeanName,t) 
+                                  for t,c in self.client.typemap.iteritems() ])
 
     def getdata(self):
         """Iterate over the data chunks in the dump file.
Index: doc/examples/ldapsync.py
===================================================================
--- doc/examples/ldapsync.py	(revision 263)
+++ doc/examples/ldapsync.py	(working copy)
@@ -31,7 +31,7 @@
 client = icat.Client(conf.url, **conf.client_kwargs)
 client.login(conf.auth, conf.credentials)
 
-icatuser = { u.name:u for u in client.search("User") }
+icatuser = dict([ (u.name,u) for u in client.search("User") ])
 
 
 ldapclient = ldap.initialize(conf.ldap_uri)
