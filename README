      python-icat - A library for writing ICAT clients in Python
      ==========================================================

This package provides a collection of modules for writing Python
programs that access an ICAT[1] service using the SOAP interface.  It
is based on Suds and extends it with ICAT specific features.


System Requirements
-------------------

 + Python 2.7 or newer.
   Python 2.6 will do but requires patching the sources, see below.
   Python 2.5 has not been tested and may or may not work.
   Python 2.4 is too old and will not work.

 + Suds, either the original version[2] or the jurko fork[3].
   The latter is recommended as the original version is not maintained
   any more and contains bugs.  Python 3 requires the jurko fork.

 + PyYAML[4]
   Only needed to run the example scripts.  Not required to install or
   use python-icat itself.

 + argparse[5]
   Only if you are using Python 2.6 or older, argparse became part of
   the Python standard library in 2.7.


Installation
------------

python-icat follows the standard Python conventions of packaging
source distributions.  See the documentation on Installing Python
Modules [6] for details or to customize the install process.

  1. Download the sources, unpack, and change into the source
     directory.

  2. Build:
     $ python setup.py build

  3. Install:
     $ python setup.py install

(If you are reading this, you probably already did the first step.)
The last step might require admin privileges in order to write into
the site-packages directory of your Python installation.

If you are using Python 2.6 or older, apply python2_6.patch after the
first step:

 1a. Patch:
     $ patch -p0 < python2_6.patch

It removes the use of dict comprehensions which were introduced in
Python 2.7.


References
----------

[1]: http://www.icatproject.org/
[2]: https://fedorahosted.org/suds/
[3]: https://bitbucket.org/jurko/suds/
[4]: http://pyyaml.org/wiki/PyYAML
[5]: http://code.google.com/p/argparse/
[6]: http://docs.python.org/2.7/install/

# Local Variables:
# mode: text
# End:
